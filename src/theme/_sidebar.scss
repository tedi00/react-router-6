@use 'colors';

* {
  box-sizing: border-box;
}

.sidebar {
  --border-right: 1px;
  --width: 300px;
  --closed-width: 60px;
  --transform: calc(var(--width) * -1 + var(--closed-width) + var(--border-right));
  position: fixed;
  z-index: 999;
  left: 0;
  top: 0;
  width: var(--width);
  min-width: 150px;
  height: 100vh;
  border-right: var(--border-right) solid colors.$blue-900;
  transform: translateX(var(--transform)); //default is closed
  transition: transform 220ms ease-in-out;
  background-color: colors.$white-7-opacity;
  backdrop-filter: blur(5px);
  padding-bottom: 50px;

  //handles behaviour of items when sidebar is open
  &.open {
    transform: translateX(0);
    width: min(var(--width), 90%);

    .toggle span {
      transform: rotate(45deg);

      &::before, &::after {
        transform: rotate(90deg);
      }

      @media screen and (max-width: 240px) {
        display: none;
      }
    }

    nav a, nav button {
      pointer-events: auto;
    }
  }

  // --!!--

  .toggle {
    width: 100%;
    height: var(--closed-width);
    border: none;
    padding: 0;
    position: relative;
    background-color: colors.$blue-900;
    //border-bottom: 1px solid colors.$blue-700;
    &:hover {
      background-color: colors.$blue-700;
    }

    p {
      font-size: 2rem;
      text-align: left;
      margin: 0 0 0 1rem;
      color: colors.$white;
    }

    span {
      --short: calc(var(--closed-width) * 1 / 10);
      --long: calc(var(--closed-width) * 8 / 10);
      position: absolute;
      right: var(--short);
      top: calc(50% - 2.5px);
      display: block;
      width: var(--long);
      height: 5px;
      background-color: colors.$white;
      border-radius: var(--short);
      transition: transform 220ms ease-in-out;
      --distance1: calc(var(--closed-width) / 5);
      --distance2: calc(var(--distance1) * -1);

      &::before, &::after {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        display: block;
        width: var(--long);
        height: 5px;
        transition: transform 220ms ease-in-out;
        background-color: colors.$white;
        border-radius: var(--short);
      }

      &::before {
        transform: translateY(var(--distance1));
      }

      &::after {
        transform: translateY(var(--distance2));
      }
    }
  }

  nav {
    display: flex;
    flex-direction: column;

    .nav-anchor {
      a {
        display: flex;
        flex-wrap: wrap;
        text-decoration: none;
      }

      .nav-text {
        overflow: hidden;

        &:not(.w-100) {
          width: calc(100% - var(--closed-width));
        }
      }

      .nav-text:not(.w-100) + .nav-icon {
        display: flex;
        justify-content: center;
        align-items: center;
        width: var(--closed-width);
        font-size: 1.5rem;
        color: colors.$blue-700;
      }

      &:hover {
        background-color: colors.$purple-50;

        .nav-icon {
          color: colors.$orange-800 !important;
        }
      }

      .active {
        .nav-text {
          font-weight: bold;
        }
        .nav-icon {
          color: colors.$orange-800 !important;
        }
      }
    }

    .nav-text, button {
      display: flex;
      height: var(--closed-width);
      align-items: center;
      padding: 1rem;
      pointer-events: none;
      text-decoration: none;
      color: colors.$blue-900;
      font-size: large;
      background-color: transparent;
      border: none;
      font-family: Arial, sans-serif;

      &:hover {
        background-color: colors.$purple-50;
      }
    }
  }

  footer {
    position: absolute;
    bottom: 0;
    width: 100%;
    max-height: 50px;
    padding: 7.5px;
    color: colors.$gray;
    label {
      width: 100%;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    .react-switch {
      box-sizing: border-box;
      width: 45px;
      height: 20px;
      position: relative;
      box-shadow: 0.2rem 0.2rem 0.4rem colors.$lightgray-2, -0.2rem -0.2rem 0.4rem colors.$white;
      border-radius: 10px;
      background-color: colors.$white;//#f1f1f1;
      border: 1px solid colors.$lightgray;
      cursor: pointer;
      --left: 2px;
      --right: 25px;
      --position: var(--left);
      &.checked {
        --position: var(--right);
        &::after {
          //linear-gradient(330deg, colors.$green 0%, colors.$green-2 100%)
          background-image: linear-gradient(330deg, colors.$blue-600 0%, colors.$blue-200 100%);
        }
      }
      &::after {
        transition: transform 0.22s linear;
        content: "";
        display: block;
        border-radius: 50%;
        position: absolute;
        top: 1px;
        transform: translateX(var(--position));
        height: 16px;
        width: 16px;
        background-image: linear-gradient(330deg, colors.$red 0%, colors.$red-2 100%);
      }
      &>div {
        height: 100%;
      }
    }
  }
}